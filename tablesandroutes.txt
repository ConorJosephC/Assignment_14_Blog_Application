My application will have three tables in total:

The relationship between the users and the messages is a One-To-Many relationship, as one user can have many posts. Therefore the table 'Posts' will have the userId as a Foreign Key.
The relationship between the comments and the posts will be a Many-To-Many relationship, as each post can have many comments from many different users. Therefore the table 'Comments' will have both the postId and the userId as Foreign Keys.

      Table Users:

id (PK)         username       firstname      lastname      email       password
integer         string         string         string        string      string

      Table Posts:

id (PK)         title           body          userId (FK)
integer         string          integer       integer

      Table Comments:

id (PK)         body            postId (FK)   userId (FK)
integer         string          integer       integer

(PK) = Primary Key
(FK) = Foreign Key

My application will have the following routes:

HOME PAGE ('/') then render ('home')

This is the default page that users will arrive at.
Here users have the option to sign in to their profile (if they have one) or can create a profile.

LOG OUT ('/logout')

Users can log out which will end their session.

SIGN UP ('/signup') then redirect to ('/profile')

Users can create an account and have to enter certain information about themselves.
Once they sign up they will be redirected to their profile page.

PROFILE ('/profile')

Users have the option to post to their own blog and also view their own messages (including any comments).

CREATE A POST ('/createapost') then redirected to ('/yourposts')

User is able to create a post with a title and a body. Once they create a message they will be redirected to a list of all of their posts.

DELETE ('/delete/:id') then redirected to ('/yourposts')

This will delete the currently selected message.

ALL OF ONE USER'S POSTS ('/yourposts')

This will show all of the messages created by one user.

ONE OF CURRENT USERS SPECIFIC POSTS ('/yourspecificpost/:postId') then render ('yourspecificpost')

This will show one specific post created by the currently logged in user (where it is possible to view all comments or leave a comment).

DISPLAY ALL POSTS ('/posts').

This will show all of the messages from all users (with options to be redirected to leave a comment or view all comments).

SPECIFIC POST OF ANOTHER USER ('/post/:postId') then render ('specificpost')

This will show a specific post for a specific user.

LEAVE COMMENTS ('/comment/:postId') then redirect to ('/post')

This allows us to leave comments on messages.
